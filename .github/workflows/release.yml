name: Automated Release

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Extract version from pyproject.toml
        id: get_version
        run: |
          version=$(python -c "import tomllib; print(tomllib.load(open('pyproject.toml'))['project']['version'])")
          echo "VERSION=$version" >> $GITHUB_ENV
          echo "::set-output name=version::$version"

      - name: Create tar.gz archive (excluding pyproject.toml and .gitignore)
        run: |
          tar --exclude=pyproject.toml --exclude=.gitignore -czf EDXD_${{ env.VERSION }}.tar.gz .

      - name: Get previous release tag
        id: prev_release
        run: |
          prev_tag=$(gh release list --limit 1 --json tagName --jq '.[0].tagName')
          echo "PREV_TAG=$prev_tag" >> $GITHUB_ENV
          echo "::set-output name=prev_tag::$prev_tag"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get closed issues since last release
        id: issues
        run: |
          issues=$(gh issue list --state closed --json number,title,closedAt,labels,url \
            --search "closed:>${{ steps.prev_release.outputs.prev_tag }}" | \
            jq -r '.[] | select(.labels[]?.name != "rejected") | "- [#\(.number)](\(.url)): \(.title)"')
          echo "RELEASE_NOTES=$issues" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create tag for new release
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git tag "v${{ env.VERSION }}"
          git push origin "v${{ env.VERSION }}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          body: |
            ## Changes since previous release:
            ${{ env.RELEASE_NOTES }}
          files: EDXD_${{ env.VERSION }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}